{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Container, List, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { call } from './service/ApiService';\nimport { ResetTvOutlined } from '@mui/icons-material';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([]);\n  axios.get(\"http://localhost:10000/todo\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    setItems(response.data); // response.data를 통해 서버에서 반환된 데이터를 처리\n  }).catch(error => {\n    console.error(\"There was an error!\", error); // 에러 처리\n  });\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    axios.get(\"http://localhost:9090/todo\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setItems(response.data); // response.data를 통해 서버에서 반환된 데이터를 처리\n    }).catch(error => {\n      console.error(\"There was an error!\", error); // 에러 처리\n    });\n  }, []);\n  const add = item => {\n    //데이터베이스에 추가하기 위해 백엔드로 데이터를 전달.\n    call(\"/todo\", \"POST\", item).then(result => setItems(result.data));\n  };\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = item => {\n    call(\"/todo\", \"DELETE\", item).then(result => setItems(result.data));\n  };\n  const editItem = item => {\n    call(\"/todo\", \"PUT\", item).then(result => setItems(result.data));\n  };\n\n  //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n  //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n  const todoItems = items.length > 0 &&\n  /*#__PURE__*/\n  //Paper컴포넌트\n  //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n  //elevation(그림자깊이)를 통해 높낮이를 표현하고\n  //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n  _jsxDEV(Paper, {\n    style: {\n      margin: 16\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n        item: item,\n        deleteItem: deleteItem,\n        editItem: editItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n        add: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), todoItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","logo","Todo","AddTodo","Container","List","Paper","axios","call","ResetTvOutlined","jsxDEV","_jsxDEV","App","_s","items","setItems","get","headers","then","response","data","catch","error","console","add","item","result","deleteItem","editItem","todoItems","length","style","margin","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","className","maxWidth","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Container, List, Paper } from '@mui/material'\nimport axios from 'axios';\nimport { call } from './service/ApiService';\nimport { ResetTvOutlined } from '@mui/icons-material';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\n\n\nfunction App() {\n\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([])\n\n  axios.get(\"http://localhost:10000/todo\", {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => {\n      setItems(response.data); // response.data를 통해 서버에서 반환된 데이터를 처리\n    })\n    .catch(error => {\n      console.error(\"There was an error!\", error); // 에러 처리\n    });\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    axios.get(\"http://localhost:9090/todo\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => {\n        setItems(response.data); // response.data를 통해 서버에서 반환된 데이터를 처리\n      })\n      .catch(error => {\n        console.error(\"There was an error!\", error); // 에러 처리\n      });\n  }, [])\n\n\n  const add = (item) => {\n    //데이터베이스에 추가하기 위해 백엔드로 데이터를 전달.\n    call(\"/todo\", \"POST\", item)\n      .then(result => setItems(result.data))\n  }\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = (item) => {\n    call(\"/todo\", \"DELETE\", item)\n      .then(result => setItems(result.data))\n  }\n\n\n  const editItem = (item) => {\n    call(\"/todo\", \"PUT\", item)\n      .then(result => setItems(result.data))\n  }\n\n  //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n  //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n  const todoItems = items.length > 0 &&\n    //Paper컴포넌트\n    //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n    //elevation(그림자깊이)를 통해 높낮이를 표현하고\n    //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n    <Paper style={{ margin: 16 }}>\n      <List>{/*일련의 항목을 세로로 나열하는 컨테이너 역할 */}\n        {items.map((item) => (\n          <Todo item={item} key={item.id} deleteItem={deleteItem} editItem={editItem} />\n        ))}\n      </List>\n    </Paper>\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        {/* AddTodo에 add함수를 전달  {add : function add(item) {~} */}\n        <AddTodo add={add} />\n        {todoItems}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}