{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Container, List, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { call } from './service/ApiService';\nimport { ResetTvOutlined } from '@mui/icons-material';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([]);\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    call(\"/todo\", \"GET\").then(result => {\n      const data = result === null || result === void 0 ? void 0 : result.data;\n      if (Array.isArray(data)) {\n        setItems(data);\n      } else {\n        console.error(\"응답 형식이 배열이 아님:\", data);\n        setItems([]);\n      }\n    });\n  }, []);\n  const add = item => {\n    //데이터베이스에 추가하기 위해 백엔드로 데이터를 전달.\n    call(\"/todo\", \"POST\", item).then(result => setItems(result.data));\n  };\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = item => {\n    call(\"/todo\", \"DELETE\", item).then(result => setItems(result.data));\n  };\n  const editItem = item => {\n    call(\"/todo\", \"PUT\", item).then(result => setItems(result.data));\n  };\n\n  //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n  //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n  const todoItems = items.length > 0 &&\n  /*#__PURE__*/\n  //Paper컴포넌트\n  //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n  //elevation(그림자깊이)를 통해 높낮이를 표현하고\n  //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n  _jsxDEV(Paper, {\n    style: {\n      margin: 16\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n        item: item,\n        deleteItem: deleteItem,\n        editItem: editItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n        add: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), todoItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","logo","Todo","AddTodo","Container","List","Paper","axios","call","ResetTvOutlined","jsxDEV","_jsxDEV","App","_s","items","setItems","then","result","data","Array","isArray","console","error","add","item","deleteItem","editItem","todoItems","length","style","margin","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","className","maxWidth","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport {Container, List, Paper} from '@mui/material'\nimport axios from 'axios';\nimport { call } from './service/ApiService';\nimport { ResetTvOutlined } from '@mui/icons-material';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\n\n\nfunction App() {\n\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([])\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    call(\"/todo\",\"GET\")\n      .then(result => {\n        const data = result?.data;\n        if (Array.isArray(data)) {\n          setItems(data);\n        } else {\n          console.error(\"응답 형식이 배열이 아님:\", data);\n          setItems([]);\n        }\n      });\n  }, []);\n  \n\n  const add = (item) => {\n    //데이터베이스에 추가하기 위해 백엔드로 데이터를 전달.\n    call(\"/todo\",\"POST\",item)\n      .then(result => setItems(result.data))\n  }\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = (item) => {\n    call(\"/todo\",\"DELETE\",item)\n      .then(result => setItems(result.data))\n  }\n\n\n  const editItem = (item) => {\n    call(\"/todo\",\"PUT\",item)\n      .then(result => setItems(result.data))\n  }\n\n    //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n    //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n    const todoItems = items.length > 0 && \n      //Paper컴포넌트\n      //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n      //elevation(그림자깊이)를 통해 높낮이를 표현하고\n      //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n      <Paper style={{margin: 16}}>\n         <List>{/*일련의 항목을 세로로 나열하는 컨테이너 역할 */}\n          {items.map((item) => (\n            <Todo item={item} key={item.id} deleteItem={deleteItem} editItem={editItem}/>\n          ))}\n        </List>\n      </Paper>\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        {/* AddTodo에 add함수를 전달  {add : function add(item) {~} */}\n        <AddTodo add={add} />\n        {todoItems}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}