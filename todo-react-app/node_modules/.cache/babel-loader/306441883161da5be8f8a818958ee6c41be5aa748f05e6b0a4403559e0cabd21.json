{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\AddTodo.js\";\nimport { useState } from \"react\";\nimport { Button, Grid, TextField } from \"@mui/material\";\n\n//Button\n//다양한 스타일(variant) : text, contained, outlined\n// 색상(color),\n// 크기(size)를 지원하는 버튼 컴포넌트\n\n//Grid2\n//CSS Grid 레이아웃 기반의 그리드 시스템\n//Flexbox 기반의 기존 Grid보다 행,열 제어가 직관적이고, rowSpacing, columnSpacing으로\n//간격을 조절할 수 있다.\n//주요 props\n//container : 그리드 컨테이너로 설정\n//item : 그리드 아이템으로 설정(생략해도 자동 감지)\n//xs(0), sm(600), md(900), lg(1200), xl(1536) : 각 브레이킹포인트별 차지할 컬럼수(기본 12분할)\n//브레이킹포인트 : 화면 너비 기준값\n//columns : 총 컬럼수 조정(기본 12)\n//rowSpacing, columnSpacing : 행,열 간격\n\n//TextField\n//입력(input),라벨(label), 헬퍼 텍스트(helperText), 에러표시(error)를 한번에\n//처리해줄 수 있는 컴포넌트\n//주요 props\n//variant : 스타일 설정\n//label : 라벨 텍스트\n//helperText : 입력 하단 도움텍스트\n//error : 에러상태표시 true만 빨간색으로 강조\n//fullWidth : 가로 100%차지 여부\n//multiline : 여러줄 입력 여부\n//rows : multiline일 때 보이는 줄 수\n//type : text, password, email 등 입력 타입\n\n//react에서 style을 줄때는 js 객체형식으로 줘야한다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodo = props => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      margin: 16\n    },\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 11,\n      sm: 11,\n      item: true,\n      style: {\n        paddingRight: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Add Todo here\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        style: {\n          height: '100%'\n        },\n        color: \"secondary\",\n        variant: \"outlined\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["useState","Button","Grid","TextField","jsxDEV","_jsxDEV","AddTodo","props","container","style","margin","justifyContent","alignItems","children","xs","sm","item","paddingRight","placeholder","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","height","color","variant","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/AddTodo.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Button, Grid, TextField } from \"@mui/material\";\r\n\r\n//Button\r\n//다양한 스타일(variant) : text, contained, outlined\r\n// 색상(color),\r\n// 크기(size)를 지원하는 버튼 컴포넌트\r\n\r\n//Grid2\r\n//CSS Grid 레이아웃 기반의 그리드 시스템\r\n//Flexbox 기반의 기존 Grid보다 행,열 제어가 직관적이고, rowSpacing, columnSpacing으로\r\n//간격을 조절할 수 있다.\r\n//주요 props\r\n//container : 그리드 컨테이너로 설정\r\n//item : 그리드 아이템으로 설정(생략해도 자동 감지)\r\n//xs(0), sm(600), md(900), lg(1200), xl(1536) : 각 브레이킹포인트별 차지할 컬럼수(기본 12분할)\r\n//브레이킹포인트 : 화면 너비 기준값\r\n//columns : 총 컬럼수 조정(기본 12)\r\n//rowSpacing, columnSpacing : 행,열 간격\r\n\r\n//TextField\r\n//입력(input),라벨(label), 헬퍼 텍스트(helperText), 에러표시(error)를 한번에\r\n//처리해줄 수 있는 컴포넌트\r\n//주요 props\r\n//variant : 스타일 설정\r\n//label : 라벨 텍스트\r\n//helperText : 입력 하단 도움텍스트\r\n//error : 에러상태표시 true만 빨간색으로 강조\r\n//fullWidth : 가로 100%차지 여부\r\n//multiline : 여러줄 입력 여부\r\n//rows : multiline일 때 보이는 줄 수\r\n//type : text, password, email 등 입력 타입\r\n\r\n//react에서 style을 줄때는 js 객체형식으로 줘야한다.\r\nconst AddTodo = (props) => {\r\n\r\n    return (\r\n        <Grid container style={{ margin: 16 }} justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid xs={11} sm={11} item style={{ paddingRight: 16 }}>\r\n                <TextField placeholder=\"Add Todo here\" fullWidth />\r\n            </Grid>\r\n            <Grid>\r\n                <Button fullWidth style={{ height: '100%' }} color=\"secondary\" variant=\"outlined\">+</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default AddTodo;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,QAAQ,eAAe;;AAEvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAEvB,oBACIF,OAAA,CAACH,IAAI;IAACM,SAAS;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAACC,cAAc,EAAC,QAAQ;IAACC,UAAU,EAAC,QAAQ;IAAAC,QAAA,gBAC9ER,OAAA,CAACH,IAAI;MAACY,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,EAAG;MAACC,IAAI;MAACP,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAG,CAAE;MAAAJ,QAAA,eACnDR,OAAA,CAACF,SAAS;QAACe,WAAW,EAAC,eAAe;QAACC,SAAS;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACPlB,OAAA,CAACH,IAAI;MAAAW,QAAA,eACDR,OAAA,CAACJ,MAAM;QAACkB,SAAS;QAACV,KAAK,EAAE;UAAEe,MAAM,EAAE;QAAO,CAAE;QAACC,KAAK,EAAC,WAAW;QAACC,OAAO,EAAC,UAAU;QAAAb,QAAA,EAAC;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1F,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf,CAAC;AAAAI,EAAA,GAZKrB,OAAO;AAcb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}