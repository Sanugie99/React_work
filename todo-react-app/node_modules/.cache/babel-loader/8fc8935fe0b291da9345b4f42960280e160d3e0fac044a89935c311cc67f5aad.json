{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\n//경로는 현재 파일을 기준으로 목적지를 찾아가면 된다.\n//import {Farewell, Greeting} from './Greetings'\nimport Todo from './Todo';\nimport { Example } from './Example';\nimport { Farewell, Greeting } from './Greetings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //우리는 하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([{\n    id: \"0\",\n    title: \"Hello world 1\",\n    done: true\n  }, {\n    id: \"1\",\n    title: \"Hello world 2\",\n    done: false\n  }]);\n\n  //React는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우 어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n  const todoItems = items.length > 0 && items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n    item: item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 57\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todoItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1uYipJh6AimXzV+QiKE/faupgWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","Todo","Example","Farewell","Greeting","jsxDEV","_jsxDEV","App","_s","items","setItems","id","title","done","todoItems","length","map","item","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\"\n//경로는 현재 파일을 기준으로 목적지를 찾아가면 된다.\n//import {Farewell, Greeting} from './Greetings'\nimport Todo from './Todo';\nimport { Example } from './Example';\nimport { Farewell, Greeting } from './Greetings';\n\nfunction App() {\n  //우리는 하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([\n  {\n    id:\"0\",\n    title:\"Hello world 1\",\n    done: true\n  },\n  {\n    id:\"1\",\n    title:\"Hello world 2\",\n    done: false\n  }\n])\n\n//React는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우 어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\nconst todoItems = items.length > 0 && items.map(item => <Todo item={item} key={item.id} />)\n\n  return (\n    <div className=\"App\">\n      {todoItems}\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CACnC;IACEW,EAAE,EAAC,GAAG;IACNC,KAAK,EAAC,eAAe;IACrBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,EAAE,EAAC,GAAG;IACNC,KAAK,EAAC,eAAe;IACrBC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,GAAG,CAAC,IAAIN,KAAK,CAACO,GAAG,CAACC,IAAI,iBAAIX,OAAA,CAACL,IAAI;IAACgB,IAAI,EAAEA;EAAK,GAAMA,IAAI,CAACN,EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,CAAC;EAEzF,oBACEf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBT;EAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGV;AAACb,EAAA,CAzBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}