{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Container, List, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { call } from './service/ApiService';\nimport { ResetTvOutlined } from '@mui/icons-material';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([]);\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    //조회\n    call(\"/todo\", \"GET\").then(result => setItems(result.data));\n  }, []);\n  const add = item => {\n    //데이터베이스에 추가하기 위해 백엔드로 데이터를 전달.\n    call(\"/todo\", \"POST\", item).then(result => setItems(result.data));\n  };\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = item => {\n    call(\"/todo\", \"DELETE\", item).then(result => setItems(result.data));\n  };\n  const editItem = () => {\n    call(\"/todo\", \"PUT\" / item).then(result => setItems(result.data));\n  };\n\n  //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n  //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n  const todoItems = items.length > 0 &&\n  /*#__PURE__*/\n  //Paper컴포넌트\n  //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n  //elevation(그림자깊이)를 통해 높낮이를 표현하고\n  //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n  _jsxDEV(Paper, {\n    style: {\n      margin: 16\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n        item: item,\n        deleteItem: deleteItem,\n        editItem: editItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n        add: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), todoItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","logo","Todo","AddTodo","Container","List","Paper","axios","call","ResetTvOutlined","jsxDEV","_jsxDEV","App","_s","items","setItems","then","result","data","add","item","deleteItem","editItem","todoItems","length","style","margin","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","className","maxWidth","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport {Container, List, Paper} from '@mui/material'\nimport axios from 'axios';\nimport { call } from './service/ApiService';\nimport { ResetTvOutlined } from '@mui/icons-material';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\n\n\nfunction App() {\n\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([])\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    //조회\n    call(\"/todo\",\"GET\")\n      .then(result => setItems(result.data))\n  }, []);\n  \n\n  const add = (item) => {\n    //데이터베이스에 추가하기 위해 백엔드로 데이터를 전달.\n    call(\"/todo\",\"POST\",item)\n      .then(result => setItems(result.data))\n  }\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = (item) => {\n    call(\"/todo\",\"DELETE\",item)\n      .then(result => setItems(result.data))\n  }\n\n\n  const editItem = () => {\n    call(\"/todo\",\"PUT\"/item)\n      .then(result => setItems(result.data))\n  }\n\n    //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n    //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n    const todoItems = items.length > 0 && \n      //Paper컴포넌트\n      //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n      //elevation(그림자깊이)를 통해 높낮이를 표현하고\n      //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n      <Paper style={{margin: 16}}>\n         <List>{/*일련의 항목을 세로로 나열하는 컨테이너 역할 */}\n          {items.map((item) => (\n            <Todo item={item} key={item.id} deleteItem={deleteItem} editItem={editItem}/>\n          ))}\n        </List>\n      </Paper>\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        {/* AddTodo에 add함수를 전달  {add : function add(item) {~} */}\n        <AddTodo add={add} />\n        {todoItems}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}