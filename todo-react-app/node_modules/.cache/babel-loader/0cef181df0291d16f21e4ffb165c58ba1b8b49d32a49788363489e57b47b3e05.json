{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\n//현재 파일에서는 checkBox와 lable 컴포넌트를 만들어보자\nimport { useState } from 'react';\nimport { ListItem, ListItemText, InputBase, Checkbox, ListItemSecondaryAction, IconButton } from '@mui/material';\nimport { DeleteOutline } from '@mui/icons-material';\n\n//ListItemSecondaryAction\n//ListItem 내부에서 텍스트나 아이콘 이후에 보조 액션 영역을 오른쪽 끝에 고정배치 해준다.\n//반드시 ListItem의 자식으로만 사용해야한다.\n\n//IconButton\n//아이콘을 클릭 가능한 버튼으로 만들어주는 컴포넌트\n\n//DeleteOutline\n//MUI 아이콘 라이브러리에 포함된 휴지통 아이콘 컴포넌트\n\n//현재 파일에서는 checkBox와 label 컴포넌트를 만들어보자\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Todo = props => {\n  _s();\n  //app.js에서 받은 한가지 할 일 목록\n  const [item, setItem] = useState(props.item);\n  const [readOnly, setReadOnly] = useState(true);\n\n  //ture를 false로 바꾸는 turnOffReadOnly함수 추가\n  const turnOffReadOnly = () => {\n    setReadOnly(false);\n  };\n\n  //삭제함수\n  const deleteItem = props.deleteItem;\n  const deleteEventHandler = () => {\n    deleteItem(item);\n  };\n  return (\n    /*#__PURE__*/\n    //html코드가 들어가는 부분\n    //속성을 쓸 때 카멜케이스로 작성하기\n    //onclick -> onClick\n    //class -> className\n    _jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: item.done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          inputProps: {\n            \"aria-label\": \"naked\",\n            readOnly: readOnly\n          },\n          onClick: turnOffReadOnly,\n          type: \"text\",\n          id: item.id,\n          name: item.id,\n          value: item.title,\n          multiline: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Delet Todo\",\n          onClick: deleteEventHandler,\n          children: [/*#__PURE__*/_jsxDEV(DeleteOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Todo, \"gX+eXC56e0NjrYZrTR0Au2i1I3Y=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","ListItem","ListItemText","InputBase","Checkbox","ListItemSecondaryAction","IconButton","DeleteOutline","jsxDEV","_jsxDEV","Todo","props","_s","item","setItem","readOnly","setReadOnly","turnOffReadOnly","deleteItem","deleteEventHandler","children","checked","done","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","onClick","type","id","name","value","title","multiline","fullWidth","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/Todo.js"],"sourcesContent":["//현재 파일에서는 checkBox와 lable 컴포넌트를 만들어보자\r\nimport { useState } from 'react'\r\nimport { ListItem, ListItemText, InputBase, Checkbox, ListItemSecondaryAction, IconButton} from '@mui/material'\r\nimport { DeleteOutline } from '@mui/icons-material';\r\n\r\n//ListItemSecondaryAction\r\n//ListItem 내부에서 텍스트나 아이콘 이후에 보조 액션 영역을 오른쪽 끝에 고정배치 해준다.\r\n//반드시 ListItem의 자식으로만 사용해야한다.\r\n\r\n//IconButton\r\n//아이콘을 클릭 가능한 버튼으로 만들어주는 컴포넌트\r\n\r\n//DeleteOutline\r\n//MUI 아이콘 라이브러리에 포함된 휴지통 아이콘 컴포넌트\r\n\r\n//현재 파일에서는 checkBox와 label 컴포넌트를 만들어보자\r\n\r\nlet Todo = (props) => {\r\n\r\n    //app.js에서 받은 한가지 할 일 목록\r\n    const [item, setItem] = useState(props.item);\r\n    const [readOnly, setReadOnly] = useState(true);\r\n    \r\n    //ture를 false로 바꾸는 turnOffReadOnly함수 추가\r\n    const turnOffReadOnly = () => {\r\n        setReadOnly(false)\r\n    }\r\n\r\n    //삭제함수\r\n    const deleteItem = props.deleteItem;\r\n\r\n    const deleteEventHandler = () => {\r\n        deleteItem(item);\r\n    }\r\n\r\n    return (\r\n\r\n        //html코드가 들어가는 부분\r\n        //속성을 쓸 때 카멜케이스로 작성하기\r\n        //onclick -> onClick\r\n        //class -> className\r\n        <ListItem>\r\n            <Checkbox checked={item.done} />\r\n            <ListItemText>\r\n                <InputBase\r\n                    inputProps={{ \"aria-label\": \"naked\" , readOnly:readOnly}}\r\n                    onClick={turnOffReadOnly}\r\n                    type=\"text\"\r\n                    id={item.id}\r\n                    name={item.id}\r\n                    value={item.title}\r\n                    multiline={true}\r\n                    fullWidth={true}\r\n                />\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n                <IconButton aria-label='Delet Todo' onClick={deleteEventHandler}>\r\n                    <DeleteOutline /> {/* 휴지통 아이콘 */}\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,uBAAuB,EAAEC,UAAU,QAAO,eAAe;AAC/G,SAASC,aAAa,QAAQ,qBAAqB;;AAEnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,IAAIC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAElB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACW,KAAK,CAACE,IAAI,CAAC;EAC5C,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMiB,eAAe,GAAGA,CAAA,KAAM;IAC1BD,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAME,UAAU,GAAGP,KAAK,CAACO,UAAU;EAEnC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7BD,UAAU,CAACL,IAAI,CAAC;EACpB,CAAC;EAED;IAAA;IAEI;IACA;IACA;IACA;IACAJ,OAAA,CAACR,QAAQ;MAAAmB,QAAA,gBACLX,OAAA,CAACL,QAAQ;QAACiB,OAAO,EAAER,IAAI,CAACS;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCjB,OAAA,CAACP,YAAY;QAAAkB,QAAA,eACTX,OAAA,CAACN,SAAS;UACNwB,UAAU,EAAE;YAAE,YAAY,EAAE,OAAO;YAAGZ,QAAQ,EAACA;UAAQ,CAAE;UACzDa,OAAO,EAAEX,eAAgB;UACzBY,IAAI,EAAC,MAAM;UACXC,EAAE,EAAEjB,IAAI,CAACiB,EAAG;UACZC,IAAI,EAAElB,IAAI,CAACiB,EAAG;UACdE,KAAK,EAAEnB,IAAI,CAACoB,KAAM;UAClBC,SAAS,EAAE,IAAK;UAChBC,SAAS,EAAE;QAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACfjB,OAAA,CAACJ,uBAAuB;QAAAe,QAAA,eACpBX,OAAA,CAACH,UAAU;UAAC,cAAW,YAAY;UAACsB,OAAO,EAAET,kBAAmB;UAAAC,QAAA,gBAC5DX,OAAA,CAACF,aAAa;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;AAEnB,CAAC;AAAAd,EAAA,CA7CGF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA+CR,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}