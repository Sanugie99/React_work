{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\Greetings.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n//함수형 컴포넌트의 정의\n//컴포넌트의 이름을 정의할 때 대문자로 시작한다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Greeting({\n  name\n}) {\n  //JSX문법으로 HTML조각을 반환할 수 있다.\n  return (\n    /*#__PURE__*/\n    //하나의 루트 요소만 반환할 수 있다.\n    //여러 요소를 반환할 때는 반드시 하나의 요소로 감싸야 한다.\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello, \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = Greeting;\nexport function Farewell(props) {\n  _s();\n  //기본적으로 props로 넘어온 데이터들은 읽기 전용이지만\n  //수정을 하고 싶다면 state를 이용해서 바꾸면 된다\n  const [name, setName] = useState(props.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Goodbye, \", name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setName(\"박길동\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Farewell, \"qG6zXcQGV3aS77Jc/YVXd/1ATIA=\");\n_c2 = Farewell;\nvar _c, _c2;\n$RefreshReg$(_c, \"Greeting\");\n$RefreshReg$(_c2, \"Farewell\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Greeting","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Farewell","props","_s","setName","useState","onClick","_c2","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/Greetings.js"],"sourcesContent":["import React from 'react'\r\n\r\n//함수형 컴포넌트의 정의\r\n//컴포넌트의 이름을 정의할 때 대문자로 시작한다.\r\nexport function Greeting({name}){\r\n    //JSX문법으로 HTML조각을 반환할 수 있다.\r\n    return (\r\n        //하나의 루트 요소만 반환할 수 있다.\r\n        //여러 요소를 반환할 때는 반드시 하나의 요소로 감싸야 한다.\r\n        <div>\r\n            <h1>Hello, {name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Farewell(props){\r\n\r\n    //기본적으로 props로 넘어온 데이터들은 읽기 전용이지만\r\n    //수정을 하고 싶다면 state를 이용해서 바꾸면 된다\r\n    const [name, setName] = useState(props.name);\r\n\r\n    return(\r\n        <div>\r\n            <h1>Goodbye, {name}!</h1>\r\n            <button onClick={() => setName(\"박길동\")}></button>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,QAAQA,CAAC;EAACC;AAAI,CAAC,EAAC;EAC5B;EACA;IAAA;IACI;IACA;IACAF,OAAA;MAAAG,QAAA,eACIH,OAAA;QAAAG,QAAA,GAAI,SAAO,EAACD,IAAI;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;AAEd;AAACC,EAAA,GATeP,QAAQ;AAWxB,OAAO,SAASQ,QAAQA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAE3B;EACA;EACA,MAAM,CAACT,IAAI,EAAEU,OAAO,CAAC,GAAGC,QAAQ,CAACH,KAAK,CAACR,IAAI,CAAC;EAE5C,oBACIF,OAAA;IAAAG,QAAA,gBACIH,OAAA;MAAAG,QAAA,GAAI,WAAS,EAACD,IAAI,EAAC,GAAC;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBP,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMF,OAAO,CAAC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACI,EAAA,CAZeF,QAAQ;AAAAM,GAAA,GAARN,QAAQ;AAAA,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}