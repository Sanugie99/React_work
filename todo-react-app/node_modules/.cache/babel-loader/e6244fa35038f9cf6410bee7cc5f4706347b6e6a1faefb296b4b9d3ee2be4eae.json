{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\n//현재 파일에서는 checkBox와 lable 컴포넌트를 만들어보자\nimport { useState } from 'react';\nimport { ListItem, ListItemText, InputBase, Checkbox } from '@mui/material';\n\n//현재 파일에서는 checkBox와 label 컴포넌트를 만들어보자\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Todo = props => {\n  _s();\n  const [item, setItem] = useState(props.item);\n  return (\n    /*#__PURE__*/\n    //html코드가 들어가는 부분\n    //속성을 쓸 때 카멜케이스로 작성하기\n    //onclick -> onClick\n    //class -> className\n    _jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: item.done\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          inputProps: {\n            \"aria-label\": \"naked\"\n          },\n          type: \"text\",\n          id: item.id,\n          name: item.id,\n          value: item.title,\n          multiline: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(Todo, \"UP8TvmJvjYyObQ4xw4Xk3vlT4YM=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","ListItem","ListItemText","InputBase","Checkbox","jsxDEV","_jsxDEV","Todo","props","_s","item","setItem","children","checked","done","fileName","_jsxFileName","lineNumber","columnNumber","inputProps","type","id","name","value","title","multiline","fullWidth","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/Todo.js"],"sourcesContent":["//현재 파일에서는 checkBox와 lable 컴포넌트를 만들어보자\r\nimport {useState} from 'react'\r\nimport {ListItem, ListItemText, InputBase, Checkbox} from '@mui/material'\r\n\r\n//현재 파일에서는 checkBox와 label 컴포넌트를 만들어보자\r\n\r\nlet Todo = (props) => {\r\n\r\n    const [item, setItem] = useState(props.item);\r\n    return(\r\n\r\n        //html코드가 들어가는 부분\r\n        //속성을 쓸 때 카멜케이스로 작성하기\r\n        //onclick -> onClick\r\n        //class -> className\r\n        <ListItem>\r\n            <Checkbox checked={item.done}/>\r\n            <ListItemText>\r\n                <InputBase\r\n                    inputProps={{\"aria-label\" : \"naked\"}}\r\n                    type=\"text\"\r\n                    id={item.id}\r\n                    name={item.id}\r\n                    value={item.title}\r\n                    multiline={true}\r\n                    fullWidth={true}\r\n                />\r\n            </ListItemText>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA;AACA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,QAAO,eAAe;;AAEzE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,IAAIC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACQ,KAAK,CAACE,IAAI,CAAC;EAC5C;IAAA;IAEI;IACA;IACA;IACA;IACAJ,OAAA,CAACL,QAAQ;MAAAW,QAAA,gBACLN,OAAA,CAACF,QAAQ;QAACS,OAAO,EAAEH,IAAI,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/BZ,OAAA,CAACJ,YAAY;QAAAU,QAAA,eACTN,OAAA,CAACH,SAAS;UACNgB,UAAU,EAAE;YAAC,YAAY,EAAG;UAAO,CAAE;UACrCC,IAAI,EAAC,MAAM;UACXC,EAAE,EAAEX,IAAI,CAACW,EAAG;UACZC,IAAI,EAAEZ,IAAI,CAACW,EAAG;UACdE,KAAK,EAAEb,IAAI,CAACc,KAAM;UAClBC,SAAS,EAAE,IAAK;UAChBC,SAAS,EAAE;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;AAEnB,CAAC;AAAAT,EAAA,CAxBGF,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA0BR,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}