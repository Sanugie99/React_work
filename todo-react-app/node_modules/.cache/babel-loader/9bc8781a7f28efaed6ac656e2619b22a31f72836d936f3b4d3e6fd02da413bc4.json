{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_lsw\\\\04.React\\\\todo-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Container, List, Paper } from '@mui/material';\nimport axios from 'axios';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([]);\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    //우리의 백엔드 url을 적어서 요청\n    axios.get(\"http://localhost:10000/todo\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setItems(response.data); //response.data를 통해 서버에서 반환된 데이터를 처리.\n    }).catch(error => {\n      console.error(\"There was an error!\", error); //에러처리\n    });\n  }, []);\n\n  //Todo를 추가하기 위한 백엔드 콜을 대신할 가짜함수를 만들어보자.\n  const add = item => {\n    //newItem 객체가 하나의 Todo\n    const newItem = {\n      ...item,\n      id: \"ID-\" + items.length,\n      done: false\n    };\n\n    //상태를 변화시키는 함수를 호출하면 state의 변경사항이 화면에 적용이된다.\n    setItems(prev => [...prev, newItem]);\n    console.log(\"items : \", [...items, newItem]);\n  };\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = item => {\n    //배열에서 삭제하려고 하는 아이템을 찾는다.\n    const newItems = items.filter(e => e.id !== item.id);\n    //삭제할 아이템을 제외한 아이템을 다시 배열에 지정한다.\n    setItems([...newItems]);\n  };\n  const editItem = () => {\n    setItems([...items]); // ->얘가 재 렌더링 해줌\n  };\n\n  //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n  //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n  const todoItems = items.length > 0 &&\n  /*#__PURE__*/\n  //Paper컴포넌트\n  //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n  //elevation(그림자깊이)를 통해 높낮이를 표현하고\n  //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n  _jsxDEV(Paper, {\n    style: {\n      margin: 16\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n        item: item,\n        deleteItem: deleteItem,\n        editItem: editItem\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n        add: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), todoItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","logo","Todo","AddTodo","Container","List","Paper","axios","jsxDEV","_jsxDEV","App","_s","items","setItems","get","headers","then","response","data","catch","error","console","add","item","newItem","id","length","done","prev","log","deleteItem","newItems","filter","e","editItem","todoItems","style","margin","children","map","fileName","_jsxFileName","lineNumber","columnNumber","className","maxWidth","_c","$RefreshReg$"],"sources":["D:/full_stack_lsw/04.React/todo-react-app/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport logo from './logo.svg';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport {Container, List, Paper} from '@mui/material'\nimport axios from 'axios';\n\n//Container\n//레이아웃의 가로 폭을 제한하고, 중앙 정렬 및 기본 패딩을 자동으로 적용해주는 컴포넌트\n\n//주요 props\n//maxWidth : 최대 너비를 지정(xs,sm,md,lg,xl,false)\n//fixed : maxWidth와 관계없이 항상 고정폭 적용\n\n\nfunction App() {\n\n  //하나의 할 일을 객체로 관리할 것이다.\n  //id, title, done\n  const [items, setItems] = useState([])\n\n  //최초 렌더링시 1번만 실행\n  useEffect(() => {\n    //우리의 백엔드 url을 적어서 요청\n    axios.get(\"http://localhost:10000/todo\",{\n      headers:{\n        \"Content-Type\":\"application/json\"\n      },\n    })\n    .then(response => {\n      setItems(response.data); //response.data를 통해 서버에서 반환된 데이터를 처리.\n    })\n    .catch(error => {\n      console.error(\"There was an error!\",error); //에러처리\n    });\n  }, []);\n  \n\n  //Todo를 추가하기 위한 백엔드 콜을 대신할 가짜함수를 만들어보자.\n  const add = (item) => {\n    //newItem 객체가 하나의 Todo\n    const newItem = {\n      ...item,\n      id: \"ID-\" + items.length,\n      done:false,\n    }\n\n    //상태를 변화시키는 함수를 호출하면 state의 변경사항이 화면에 적용이된다.\n    setItems(prev => [...prev, newItem])\n    console.log(\"items : \",[...items,newItem]);\n\n  }\n\n  //삭제를 해주는 deleteItem()함수 만들기\n  //delete from 테이블 where id=0;\n  const deleteItem = (item) => {\n    //배열에서 삭제하려고 하는 아이템을 찾는다.\n    const newItems = items.filter(e => e.id !== item.id);\n    //삭제할 아이템을 제외한 아이템을 다시 배열에 지정한다.\n    setItems([...newItems]);\n  }\n\n\n  const editItem = () => {\n    setItems([...items]);// ->얘가 재 렌더링 해줌\n  }\n\n    //react는 key속성에 들어있는 값을 참고해서, 리스트의 요소가 변경될 경우\n    //어떤 요소가 변경되었는지 빠르게 파악할 수 있다.\n    const todoItems = items.length > 0 && \n      //Paper컴포넌트\n      //종이 같은 표면 효과를 제공하는 컨테이너 컴포넌트\n      //elevation(그림자깊이)를 통해 높낮이를 표현하고\n      //배경색과 그림자 효과로 콘텐츠를 돋보이게 한다.\n      <Paper style={{margin: 16}}>\n         <List>{/*일련의 항목을 세로로 나열하는 컨테이너 역할 */}\n          {items.map((item) => (\n            <Todo item={item} key={item.id} deleteItem={deleteItem} editItem={editItem}/>\n          ))}\n        </List>\n      </Paper>\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        {/* AddTodo에 add함수를 전달  {add : function add(item) {~} */}\n        <AddTodo add={add} />\n        {todoItems}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}